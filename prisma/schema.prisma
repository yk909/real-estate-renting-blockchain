generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  walletAddress String    @unique
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  favoriteIds   String[]

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  accounts     Account[]
  listings     Listing[]
  reservations Reservation[]
  Review       Review[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Listing {
  id            String   @id @default(cuid())
  title         String
  description   String
  imageSrc      String[]
  createdAt     DateTime @default(now())
  category      String
  roomCount     Int
  bathroomCount Int
  guestCount    Int
  userId        String
  price         Int
  country       String?
  latlng        Int[]
  region        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  reservations Reservation[]
  Review       Review[]
}

model Review {
  id             String @id @default(cuid())
  userId         String
  listingId      String
  cleanliness    Float
  accuracy       Float
  check_in       Float
  communication  Float
  location_score Float
  value          Float
  description    String

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}

model Reservation {
  id         String   @id @default(cuid())
  userId     String
  listingId  String
  startDate  DateTime
  endDate    DateTime
  totalPrice Int
  createdAt  DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}
